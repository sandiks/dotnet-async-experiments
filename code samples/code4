using System;
using System.Threading.Tasks;

class Program
{
    static async Task Main(string[] args)
    {
        Coffee cup = PourCoffee();
        Console.WriteLine("coffee is ready");

        var eggsTask = FryEggsAsync(2);
        var baconTask = FryBaconAsync(3);
        var toastTask = MakeToastWithButterAndJamAsync(2);

        await Task.WhenAll(eggsTask, baconTask, toastTask);
        Console.WriteLine("eggs are ready");
        Console.WriteLine("bacon is ready");
        Console.WriteLine("toast is ready");

        Juice oj = PourOJ();
        Console.WriteLine("oj is ready");

        Console.WriteLine("Breakfast is ready!");
    }
    private static Coffee PourCoffee() => new Coffee();
    
    static async Task<Bacon> FryBaconAsync(int v) => new Bacon();
    static async Task<Egg> FryEggsAsync(int v) => new Egg();    

    static async Task<Toast> MakeToastWithButterAndJamAsync(int number)
    {
        var toast = await ToastBreadAsync(number);
        ApplyButter(toast);
        ApplyJam(toast);
        return toast;
    }
    
    static async Task<Toast> ToastBreadAsync(int v) => new Toast();
    static void ApplyJam(Toast toast) => System.Console.WriteLine("applaing jam ...");
    static void ApplyButter(Toast toast) => System.Console.WriteLine("applaing butter ...");
    static Juice PourOJ() => new Juice();
}

internal class Juice
{
}

internal class Toast
{
}

internal class Bacon
{
}

internal class Egg
{
}

internal class Coffee
{
}